package test.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DisBrokerRelationExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public DisBrokerRelationExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andUseridIsNull() {
			addCriterion("userId is null");
			return (Criteria) this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("userId is not null");
			return (Criteria) this;
		}

		public Criteria andUseridEqualTo(Long value) {
			addCriterion("userId =", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotEqualTo(Long value) {
			addCriterion("userId <>", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThan(Long value) {
			addCriterion("userId >", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(Long value) {
			addCriterion("userId >=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThan(Long value) {
			addCriterion("userId <", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThanOrEqualTo(Long value) {
			addCriterion("userId <=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridIn(List<Long> values) {
			addCriterion("userId in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotIn(List<Long> values) {
			addCriterion("userId not in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridBetween(Long value1, Long value2) {
			addCriterion("userId between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotBetween(Long value1, Long value2) {
			addCriterion("userId not between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andDirectinviterIsNull() {
			addCriterion("directInviter is null");
			return (Criteria) this;
		}

		public Criteria andDirectinviterIsNotNull() {
			addCriterion("directInviter is not null");
			return (Criteria) this;
		}

		public Criteria andDirectinviterEqualTo(Long value) {
			addCriterion("directInviter =", value, "directinviter");
			return (Criteria) this;
		}

		public Criteria andDirectinviterNotEqualTo(Long value) {
			addCriterion("directInviter <>", value, "directinviter");
			return (Criteria) this;
		}

		public Criteria andDirectinviterGreaterThan(Long value) {
			addCriterion("directInviter >", value, "directinviter");
			return (Criteria) this;
		}

		public Criteria andDirectinviterGreaterThanOrEqualTo(Long value) {
			addCriterion("directInviter >=", value, "directinviter");
			return (Criteria) this;
		}

		public Criteria andDirectinviterLessThan(Long value) {
			addCriterion("directInviter <", value, "directinviter");
			return (Criteria) this;
		}

		public Criteria andDirectinviterLessThanOrEqualTo(Long value) {
			addCriterion("directInviter <=", value, "directinviter");
			return (Criteria) this;
		}

		public Criteria andDirectinviterIn(List<Long> values) {
			addCriterion("directInviter in", values, "directinviter");
			return (Criteria) this;
		}

		public Criteria andDirectinviterNotIn(List<Long> values) {
			addCriterion("directInviter not in", values, "directinviter");
			return (Criteria) this;
		}

		public Criteria andDirectinviterBetween(Long value1, Long value2) {
			addCriterion("directInviter between", value1, value2, "directinviter");
			return (Criteria) this;
		}

		public Criteria andDirectinviterNotBetween(Long value1, Long value2) {
			addCriterion("directInviter not between", value1, value2, "directinviter");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterIsNull() {
			addCriterion("indirectInviter is null");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterIsNotNull() {
			addCriterion("indirectInviter is not null");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterEqualTo(Long value) {
			addCriterion("indirectInviter =", value, "indirectinviter");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterNotEqualTo(Long value) {
			addCriterion("indirectInviter <>", value, "indirectinviter");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterGreaterThan(Long value) {
			addCriterion("indirectInviter >", value, "indirectinviter");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterGreaterThanOrEqualTo(Long value) {
			addCriterion("indirectInviter >=", value, "indirectinviter");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterLessThan(Long value) {
			addCriterion("indirectInviter <", value, "indirectinviter");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterLessThanOrEqualTo(Long value) {
			addCriterion("indirectInviter <=", value, "indirectinviter");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterIn(List<Long> values) {
			addCriterion("indirectInviter in", values, "indirectinviter");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterNotIn(List<Long> values) {
			addCriterion("indirectInviter not in", values, "indirectinviter");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterBetween(Long value1, Long value2) {
			addCriterion("indirectInviter between", value1, value2, "indirectinviter");
			return (Criteria) this;
		}

		public Criteria andIndirectinviterNotBetween(Long value1, Long value2) {
			addCriterion("indirectInviter not between", value1, value2, "indirectinviter");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNull() {
			addCriterion("createTime is null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNotNull() {
			addCriterion("createTime is not null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeEqualTo(Date value) {
			addCriterion("createTime =", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotEqualTo(Date value) {
			addCriterion("createTime <>", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThan(Date value) {
			addCriterion("createTime >", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("createTime >=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThan(Date value) {
			addCriterion("createTime <", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
			addCriterion("createTime <=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIn(List<Date> values) {
			addCriterion("createTime in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotIn(List<Date> values) {
			addCriterion("createTime not in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeBetween(Date value1, Date value2) {
			addCriterion("createTime between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
			addCriterion("createTime not between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeIsNull() {
			addCriterion("lastModifyTime is null");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeIsNotNull() {
			addCriterion("lastModifyTime is not null");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeEqualTo(Date value) {
			addCriterion("lastModifyTime =", value, "lastmodifytime");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeNotEqualTo(Date value) {
			addCriterion("lastModifyTime <>", value, "lastmodifytime");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeGreaterThan(Date value) {
			addCriterion("lastModifyTime >", value, "lastmodifytime");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeGreaterThanOrEqualTo(Date value) {
			addCriterion("lastModifyTime >=", value, "lastmodifytime");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeLessThan(Date value) {
			addCriterion("lastModifyTime <", value, "lastmodifytime");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeLessThanOrEqualTo(Date value) {
			addCriterion("lastModifyTime <=", value, "lastmodifytime");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeIn(List<Date> values) {
			addCriterion("lastModifyTime in", values, "lastmodifytime");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeNotIn(List<Date> values) {
			addCriterion("lastModifyTime not in", values, "lastmodifytime");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeBetween(Date value1, Date value2) {
			addCriterion("lastModifyTime between", value1, value2, "lastmodifytime");
			return (Criteria) this;
		}

		public Criteria andLastmodifytimeNotBetween(Date value1, Date value2) {
			addCriterion("lastModifyTime not between", value1, value2, "lastmodifytime");
			return (Criteria) this;
		}

		public Criteria andLevelIsNull() {
			addCriterion("level is null");
			return (Criteria) this;
		}

		public Criteria andLevelIsNotNull() {
			addCriterion("level is not null");
			return (Criteria) this;
		}

		public Criteria andLevelEqualTo(Byte value) {
			addCriterion("level =", value, "level");
			return (Criteria) this;
		}

		public Criteria andLevelNotEqualTo(Byte value) {
			addCriterion("level <>", value, "level");
			return (Criteria) this;
		}

		public Criteria andLevelGreaterThan(Byte value) {
			addCriterion("level >", value, "level");
			return (Criteria) this;
		}

		public Criteria andLevelGreaterThanOrEqualTo(Byte value) {
			addCriterion("level >=", value, "level");
			return (Criteria) this;
		}

		public Criteria andLevelLessThan(Byte value) {
			addCriterion("level <", value, "level");
			return (Criteria) this;
		}

		public Criteria andLevelLessThanOrEqualTo(Byte value) {
			addCriterion("level <=", value, "level");
			return (Criteria) this;
		}

		public Criteria andLevelIn(List<Byte> values) {
			addCriterion("level in", values, "level");
			return (Criteria) this;
		}

		public Criteria andLevelNotIn(List<Byte> values) {
			addCriterion("level not in", values, "level");
			return (Criteria) this;
		}

		public Criteria andLevelBetween(Byte value1, Byte value2) {
			addCriterion("level between", value1, value2, "level");
			return (Criteria) this;
		}

		public Criteria andLevelNotBetween(Byte value1, Byte value2) {
			addCriterion("level not between", value1, value2, "level");
			return (Criteria) this;
		}

		public Criteria andInviterpathIsNull() {
			addCriterion("inviterPath is null");
			return (Criteria) this;
		}

		public Criteria andInviterpathIsNotNull() {
			addCriterion("inviterPath is not null");
			return (Criteria) this;
		}

		public Criteria andInviterpathEqualTo(String value) {
			addCriterion("inviterPath =", value, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathNotEqualTo(String value) {
			addCriterion("inviterPath <>", value, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathGreaterThan(String value) {
			addCriterion("inviterPath >", value, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathGreaterThanOrEqualTo(String value) {
			addCriterion("inviterPath >=", value, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathLessThan(String value) {
			addCriterion("inviterPath <", value, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathLessThanOrEqualTo(String value) {
			addCriterion("inviterPath <=", value, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathLike(String value) {
			addCriterion("inviterPath like", value, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathNotLike(String value) {
			addCriterion("inviterPath not like", value, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathIn(List<String> values) {
			addCriterion("inviterPath in", values, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathNotIn(List<String> values) {
			addCriterion("inviterPath not in", values, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathBetween(String value1, String value2) {
			addCriterion("inviterPath between", value1, value2, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andInviterpathNotBetween(String value1, String value2) {
			addCriterion("inviterPath not between", value1, value2, "inviterpath");
			return (Criteria) this;
		}

		public Criteria andBrokertypeIsNull() {
			addCriterion("brokerType is null");
			return (Criteria) this;
		}

		public Criteria andBrokertypeIsNotNull() {
			addCriterion("brokerType is not null");
			return (Criteria) this;
		}

		public Criteria andBrokertypeEqualTo(String value) {
			addCriterion("brokerType =", value, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeNotEqualTo(String value) {
			addCriterion("brokerType <>", value, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeGreaterThan(String value) {
			addCriterion("brokerType >", value, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeGreaterThanOrEqualTo(String value) {
			addCriterion("brokerType >=", value, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeLessThan(String value) {
			addCriterion("brokerType <", value, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeLessThanOrEqualTo(String value) {
			addCriterion("brokerType <=", value, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeLike(String value) {
			addCriterion("brokerType like", value, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeNotLike(String value) {
			addCriterion("brokerType not like", value, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeIn(List<String> values) {
			addCriterion("brokerType in", values, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeNotIn(List<String> values) {
			addCriterion("brokerType not in", values, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeBetween(String value1, String value2) {
			addCriterion("brokerType between", value1, value2, "brokertype");
			return (Criteria) this;
		}

		public Criteria andBrokertypeNotBetween(String value1, String value2) {
			addCriterion("brokerType not between", value1, value2, "brokertype");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeIsNull() {
			addCriterion("typeChangeTime is null");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeIsNotNull() {
			addCriterion("typeChangeTime is not null");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeEqualTo(Date value) {
			addCriterion("typeChangeTime =", value, "typechangetime");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeNotEqualTo(Date value) {
			addCriterion("typeChangeTime <>", value, "typechangetime");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeGreaterThan(Date value) {
			addCriterion("typeChangeTime >", value, "typechangetime");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("typeChangeTime >=", value, "typechangetime");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeLessThan(Date value) {
			addCriterion("typeChangeTime <", value, "typechangetime");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeLessThanOrEqualTo(Date value) {
			addCriterion("typeChangeTime <=", value, "typechangetime");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeIn(List<Date> values) {
			addCriterion("typeChangeTime in", values, "typechangetime");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeNotIn(List<Date> values) {
			addCriterion("typeChangeTime not in", values, "typechangetime");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeBetween(Date value1, Date value2) {
			addCriterion("typeChangeTime between", value1, value2, "typechangetime");
			return (Criteria) this;
		}

		public Criteria andTypechangetimeNotBetween(Date value1, Date value2) {
			addCriterion("typeChangeTime not between", value1, value2, "typechangetime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table dis_broker_relation
	 * @mbg.generated  Mon Feb 05 17:10:18 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dis_broker_relation
     *
     * @mbg.generated do_not_delete_during_merge Mon Feb 05 16:40:47 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}